services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "81:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    restart: always

  database:
    image: mariadb:10.5
    container_name: database
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_USER: db_user
      MYSQL_PASSWORD: db_password
      MYSQL_DATABASE: db_name
      MYSQL_ROOT_PASSWORD: sup3rp4ss

  queue:
    image: rabbitmq:3-management
    container_name: queue
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: queue
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.queue.rule=Host(`queue.tms.localhost`)"
      - "traefik.http.services.queue.loadbalancer.server.port=15672"

  # Manager - Frontend
  manager:
    build:
      context: ./manager
      dockerfile: Dockerfile
    container_name: vue_manager
    ports:
      - "8080:80"  # Expose Vue.js app
    depends_on:
      - core
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.manager.rule=Host(`manager.tms.local`)"
      - "traefik.http.services.manager.loadbalancer.server.port=80"

  # Core - Backend
  core:
    image: adaptdk/nginx-rm-default
    depends_on:
      - core-fpm
    volumes:
      - ./core:/app:cached  # Ensure this points to the correct location of your backend code
      - ./core/site.conf:/etc/nginx/conf.d/site.conf  # Mount site.conf to the right location
    extra_hosts:
      - "core.local:127.0.0.1"
    links:
      - core-fpm:app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.core.rule=Host(`core.local`)"
      - "traefik.http.services.core.loadbalancer.server.port=80"


  core-fpm:
    build:
      context: ./core
      dockerfile: Dockerfile
    container_name: core-fpm-container  # New container name
    depends_on:
      - database
    volumes:
      - ./core:/app:cached
    working_dir: /public
    command: php-fpm


networks:
  app_network:
    driver: bridge
